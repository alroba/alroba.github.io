{"version":3,"sources":["components/layers/AllMines_2022Layer.js","data/sources/allMines_2022Source.js","components/views/AllMines_2022.js"],"names":["ALL_MINES_2022_LAYER_ID","DATA","Object","entries","map","elem","color","label","layerConfig","title","visible","legend","attr","type","LEGEND_TYPES","CATEGORY","labels","data","colors","AllMines_2022Layer","setPopupInfo","selectedId","setSelectedId","dispatch","useDispatch","allMines_2022Layer","useSelector","state","carto","layers","source","selectSourceById","cartoLayerProps","useCartoLayerProps","NO_DATA_STR","dataPromise","useMemo","fetchLayerData","connection","format","GeoJsonLayer","dataTransform","res","id","pointType","pickable","getIconSize","d","properties","prop_id","getIconColor","colorCategories","domain","getIcon","url","width","height","mask","onDataLoad","updateLayer","layerAttributes","updateTriggers","onClick","info","object","coordinates","geometry","propsObject","fields","value","prop_name","primary_commodity","commodities_list","dev_stage","stage","operator_name","operator_hq","operator_country","owner_name","owner_hq","owner_country","state_province","country_name","MAP_TYPES","QUERY","useStyles","makeStyles","allMines_2022","AllMines_2022","classes","useEffect","addSource","allMines_2022Source","addLayer","removeLayer","removeSource","cartoThemeOptions","palette","secondary","main","dark","theme","createTheme","Grid","container","direction","className","dataSource","operation","AggregationTypes","COUNT","onError","console","error","ThemeProvider","column"],"mappings":"mHAAA,8IASO,MAAMA,EAA0B,qBAQjCC,EAAOC,OAAOC,QANW,CAC7B,eAAgB,CAAC,GAAI,IAAK,KAC1B,aAAc,CAAC,IAAK,GAAI,KACxB,cAAe,CAAC,EAAG,GAAI,OAGoBC,KAAKC,IACzC,CAAEC,MAAOD,EAAK,GAAIE,MAAOF,EAAK,OAGjCG,EAAc,CAClBC,MAAO,QACPC,SAAS,EACTC,OAAQ,CACNC,KAAM,QACNC,KAAMC,eAAaC,SACnBC,OAAQf,EAAKG,KAAKa,GAASA,EAAKV,QAChCW,OAAQjB,EAAKG,KAAKa,GAASA,EAAKX,UAIrB,SAASa,EAAmBC,EAAcC,EAAYC,GACnE,MAAMC,EAAWC,yBACX,mBAAEC,GAAuBC,uBAAaC,GAAUA,EAAMC,MAAMC,SAC5DC,EAASJ,uBAAaC,GAAUI,2BAAiBJ,EAAyB,OAAlBF,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBK,UAC5EE,EAAkBC,6BAAmB,CAAEH,WACvCI,EAAc,UAOdC,EAAcC,mBAClB,KACQ,OAANN,QAAM,IAANA,OAAM,EAANA,EAAQb,OACRoB,YAAe,CACbxB,KAAMiB,EAAOjB,KACbyB,WAAYR,EAAOQ,WACnBR,OAAQA,EAAOb,KACfsB,OAAQ,aAEZ,CAAO,OAANT,QAAM,IAANA,OAAM,EAANA,EAAQjB,KAAY,OAANiB,QAAM,IAANA,OAAM,EAANA,EAAQb,KAAY,OAANa,QAAM,IAANA,OAAM,EAANA,EAAQQ,aAGvC,GAAIb,GAAsBK,EACxB,OAAO,IAAIU,IAAa,IACnBR,EACHf,KAAMkB,EACNM,cAAgBC,GAAQA,EAAIzB,KAC5B0B,GAAI3C,EAEJ4C,UAAW,OACXC,UAAU,EACVC,YAAaC,GAAKA,EAAEC,WAAWC,UAAY5B,EAAa,GAAK,GAC7D6B,aAAcC,YAAgB,CAC5BvC,KAAM,QACNwC,OAAQ,CACN,eACA,aACA,eAEFlC,OAAQ,CACN,CAAC,GAAI,IAAK,KACV,CAAC,IAAK,GAAI,KACV,CAAC,EAAG,GAAI,QAGZmC,QAASN,IAAC,CACRO,IAAK,0FACLC,MAAO,GACPC,OAAQ,GACRC,MAAM,IAGRC,WAAazC,IACXM,EACEoC,sBAAY,CACVhB,GAAI3C,EACJ4D,gBAAiB,IAAKpD,MAG1BwB,EAAgB0B,YAAc1B,EAAgB0B,WAAWzC,EAAK,EAEhE4C,eAAgB,IACX7B,EAAgB6B,eACnBf,YAAazB,GAEfX,QAASe,EAAmBf,QAE5BoD,QAAUC,IACA,OAAJA,QAAI,IAAJA,KAAMC,QACR1C,EAAcyC,EAAKC,OAAOhB,WAAWC,SACrC7B,EAAa,CACX6C,YAAaF,EAAKC,OAAOE,SAASD,YAClCE,YAAa,CACXC,OAAQ,CACN,CACE7D,MAAO,WACP8D,MAAON,EAAKC,OAAOhB,WAAWsB,WAAapC,GAE7C,CACE3B,MAAO,oBACP8D,MAAON,EAAKC,OAAOhB,WAAWuB,mBAAqBrC,GAErD,CACE3B,MAAO,oBACP8D,MAAON,EAAKC,OAAOhB,WAAWwB,kBAAoBtC,GAEpD,CACE3B,MAAO,oBACP8D,MAAON,EAAKC,OAAOhB,WAAWyB,WAAavC,GAE7C,CACE3B,MAAO,QACP8D,MAAON,EAAKC,OAAOhB,WAAW0B,OAASxC,GAEzC,CACE3B,MAAO,WACP8D,MAAON,EAAKC,OAAOhB,WAAW2B,eAAiBzC,GAEjD,CACE3B,MAAO,cACP8D,MAAON,EAAKC,OAAOhB,WAAW4B,aAAe1C,GAE/C,CACE3B,MAAO,mBACP8D,MAAON,EAAKC,OAAOhB,WAAW6B,kBAAoB3C,GAEpD,CACE3B,MAAO,QACP8D,MAAON,EAAKC,OAAOhB,WAAW8B,YAAc5C,GAE9C,CACE3B,MAAO,WACP8D,MAAON,EAAKC,OAAOhB,WAAW+B,UAAY7C,GAE5C,CACE3B,MAAO,gBACP8D,MAAON,EAAKC,OAAOhB,WAAWgC,eAAiB9C,GAEjD,CACE3B,MAAO,iBACP8D,MAAON,EAAKC,OAAOhB,WAAWiC,gBAAkB/C,GAElD,CACE3B,MAAO,UACP8D,MAAON,EAAKC,OAAOhB,WAAWkC,cAAgBhD,QAMpDZ,EAAc,KAClB,GAIR,C,iHC9JeQ,MAPA,CACba,GAH+B,sBAI/B9B,K,MAAMsE,EAAUC,MAChB9C,WAAY,WACZrB,KAAO,sQ,kGCaT,MAAMoE,EAAYC,aAAW,MAC3BC,cAAe,CAAC,MAGH,SAASC,IACtB,MAAMjE,EAAWC,wBACXiE,EAAUJ,IAEhBK,qBAAU,KACRnE,EAASoE,oBAAUC,IAEnBrE,EACEsE,mBAAS,CACPlD,GAAI3C,IACJ8B,OAAQ8D,EAAoBjD,MAIzB,KACLpB,EAASuE,sBAAY9F,MACrBuB,EAASwE,uBAAaH,EAAoBjD,IAAI,IAE/C,CAACpB,IAIJyE,oBAAkBC,QAAQC,UAAUC,KAAO,UAC3CH,oBAAkBC,QAAQC,UAAUE,KAAO,UAE3C,MAAMC,EAAQC,YAAYN,qBAE1B,OACE,eAACO,EAAA,EAAI,CAACC,WAAS,EAACC,UAAU,SAASC,UAAWjB,EAAQF,cAAc,UAChE,cAAC,gBAAa,CACZ5C,GAAG,cACHlC,MAAM,eACNkG,WAAW,sBACXC,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAEnB,eAACC,EAAA,EAAa,CAACb,MAAOA,EAAM,UAC1B,cAAC,iBAAc,CACb1D,GAAG,eACHlC,MAAM,gBACNkG,WAAW,sBACXQ,OAAO,YACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,mBACHlC,MAAM,oBACNkG,WAAW,sBACXQ,OAAO,oBACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,mBACHlC,MAAM,oBACNkG,WAAW,sBACXQ,OAAO,YACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,cACHlC,MAAM,eACNkG,WAAW,sBACXQ,OAAO,QACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,eACHlC,MAAM,gBACNkG,WAAW,sBACXQ,OAAO,oBACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,UACHlC,MAAM,UACNkG,WAAW,sBACXQ,OAAO,eACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,gBACHlC,MAAM,iBACNkG,WAAW,sBACXQ,OAAO,iBACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,eACHlC,MAAM,gBACNkG,WAAW,sBACXQ,OAAO,gBACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,kBACHlC,MAAM,mBACNkG,WAAW,sBACXQ,OAAO,mBACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,iBACHlC,MAAM,kBACNkG,WAAW,sBACXQ,OAAO,yBACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,YACHlC,MAAM,aACNkG,WAAW,sBACXQ,OAAO,aACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,eACHlC,MAAM,gBACNkG,WAAW,sBACXQ,OAAO,gBACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,QAGnB,cAAC,iBAAc,CACbtE,GAAG,cACHlC,MAAM,eACNkG,WAAW,sBACXQ,OAAO,sBACPP,UAAWC,mBAAiBC,MAC5BC,QAASC,QAAQC,aAK7B,C","file":"static/js/11.2f4d6f8b.chunk.js","sourcesContent":["import { useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { colorCategories, fetchLayerData, CartoLayer } from '@deck.gl/carto';\nimport { GeoJsonLayer } from '@deck.gl/layers';\nimport { selectSourceById, updateLayer } from '@carto/react-redux';\nimport { useCartoLayerProps } from '@carto/react-api';\n\nimport { LEGEND_TYPES } from '@carto/react-ui';\n\nexport const ALL_MINES_2022_LAYER_ID = 'allMines_2022Layer';\n\nexport const CATEGORY_COLORS = {\n  'Early Stage ': [37, 144, 216],\n  'Mine Stage': [110, 45, 135],\n  'Late Stage ': [0, 70, 145],  \n};\n\nconst DATA = Object.entries(CATEGORY_COLORS).map((elem) => {\n  return { color: elem[1], label: elem[0] };\n});\n\nconst layerConfig = {\n  title: 'Stage',\n  visible: true,\n  legend: {\n    attr: 'stage',\n    type: LEGEND_TYPES.CATEGORY,\n    labels: DATA.map((data) => data.label),\n    colors: DATA.map((data) => data.color),\n  },\n};\n\nexport default function AllMines_2022Layer(setPopupInfo, selectedId, setSelectedId) {\n  const dispatch = useDispatch();\n  const { allMines_2022Layer } = useSelector((state) => state.carto.layers);\n  const source = useSelector((state) => selectSourceById(state, allMines_2022Layer?.source));\n  const cartoLayerProps = useCartoLayerProps({ source });\n  const NO_DATA_STR = 'No data';\n\n  // The CartoLayer only works with dynamic tiles so feature dropping can\n  // happen at lower zoom levels. If feature dropping happens, the widgets\n  // linked to the same source are not going to work. If we want the widgets\n  // to work at all zoom levels, we need to fetch the data in GeoJSON format\n  // and then use the GeoJsonLayer intead of the CartoLayer.\n  const dataPromise = useMemo(\n    () =>\n      source?.data &&\n      fetchLayerData({\n        type: source.type,\n        connection: source.connection,\n        source: source.data,\n        format: 'geojson',\n      }),\n    [source?.type, source?.data, source?.connection]\n  );\n\n  if (allMines_2022Layer && source) {\n    return new GeoJsonLayer({\n      ...cartoLayerProps,\n      data: dataPromise,\n      dataTransform: (res) => res.data,\n      id: ALL_MINES_2022_LAYER_ID,\n      \n      pointType: 'icon',\n      pickable: true,\n      getIconSize: d => d.properties.prop_id === selectedId ? 25 : 13,\n      getIconColor: colorCategories({\n        attr: 'stage',\n        domain: [\n          'Early Stage ',\n          'Mine Stage',\n          'Late Stage '\n        ],\n        colors: [\n          [37, 144, 216],\n          [110, 45, 135],\n          [0, 70, 145]\n        ]\n      }),\n      getIcon: d => ({\n        url: 'https://s3.amazonaws.com/com.cartodb.users-assets.production/maki-icons/oil-well-18.svg',\n        width: 24,\n        height: 24,\n        mask: true\n      }),\n\n      onDataLoad: (data) => {\n        dispatch(\n          updateLayer({\n            id: ALL_MINES_2022_LAYER_ID,\n            layerAttributes: { ...layerConfig },\n          })\n        );\n        cartoLayerProps.onDataLoad && cartoLayerProps.onDataLoad(data);\n      },\n      updateTriggers: {\n        ...cartoLayerProps.updateTriggers, // getting existing update triggers\n        getIconSize: selectedId,\n      },\n      visible: allMines_2022Layer.visible,\n\n      onClick: (info) => {\n        if (info?.object) {\n          setSelectedId(info.object.properties.prop_id)\n          setPopupInfo({\n            coordinates: info.object.geometry.coordinates,\n            propsObject: {\n              fields: [\n                {\n                  label: 'Property',\n                  value: info.object.properties.prop_name || NO_DATA_STR,\n                },\n                {\n                  label: 'Primary Commodity',\n                  value: info.object.properties.primary_commodity || NO_DATA_STR,\n                },\n                {\n                  label: 'Other Commodities',\n                  value: info.object.properties.commodities_list || NO_DATA_STR,\n                },\n                {\n                  label: 'Development Stage',\n                  value: info.object.properties.dev_stage || NO_DATA_STR,\n                },\n                {\n                  label: 'Stage',\n                  value: info.object.properties.stage || NO_DATA_STR,\n                },\n                {\n                  label: 'Operator',\n                  value: info.object.properties.operator_name || NO_DATA_STR,\n                },\n                {\n                  label: 'Operator HQ',\n                  value: info.object.properties.operator_hq || NO_DATA_STR,\n                },\n                {\n                  label: 'Operator Country',\n                  value: info.object.properties.operator_country || NO_DATA_STR,\n                },\n                {\n                  label: 'Owner',\n                  value: info.object.properties.owner_name || NO_DATA_STR,\n                },\n                {\n                  label: 'Owner HQ',\n                  value: info.object.properties.owner_hq || NO_DATA_STR,\n                },\n                {\n                  label: 'Owner Country',\n                  value: info.object.properties.owner_country || NO_DATA_STR,\n                },\n                {\n                  label: 'State/Province',\n                  value: info.object.properties.state_province || NO_DATA_STR,\n                },\n                {\n                  label: 'Country',\n                  value: info.object.properties.country_name || NO_DATA_STR,\n                },\n              ]\n            },\n          })\n        } else {\n            setSelectedId(null);\n        }\n      }\n    });\n  }\n}\n","import { MAP_TYPES } from '@deck.gl/carto';\n\nconst ALL_MINES_2022_SOURCE_ID = 'allMines_2022Source';\n\nconst source = {\n  id: ALL_MINES_2022_SOURCE_ID,\n  type: MAP_TYPES.QUERY,\n  connection: 'carto_dw',\n  data: `SELECT geom,stage,prop_name,primary_commodity,dev_stage,snl_global_region,country_name,state_province,operator_name,operator_country,operator_global_region,owner_name,owner_country,owner_global_region,prop_id FROM \\`carto-dw-ac-qz0vkdhv\\`.shared.All_Mines_2022`,\n};\n\nexport default source;\n","import { useEffect } from 'react';\nimport allMines_2022Source from 'data/sources/allMines_2022Source';\nimport { ALL_MINES_2022_LAYER_ID } from 'components/layers/AllMines_2022Layer';\nimport { useDispatch } from 'react-redux';\nimport {\n  addLayer,\n  removeLayer,\n  addSource,\n  removeSource,\n} from '@carto/react-redux';\n\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { FormulaWidget, CategoryWidget } from '@carto/react-widgets';\n\nimport { AggregationTypes } from '@carto/react-core';\n\nimport { cartoThemeOptions } from '@carto/react-ui';\nimport { createTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  allMines_2022: {},\n}));\n\nexport default function AllMines_2022() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(addSource(allMines_2022Source));\n\n    dispatch(\n      addLayer({\n        id: ALL_MINES_2022_LAYER_ID,\n        source: allMines_2022Source.id,\n      }),\n    );\n\n    return () => {\n      dispatch(removeLayer(ALL_MINES_2022_LAYER_ID));\n      dispatch(removeSource(allMines_2022Source.id));\n    };\n  }, [dispatch]);\n\n  // [hygen] Add useEffect\n\n  cartoThemeOptions.palette.secondary.main = '#212529'\n  cartoThemeOptions.palette.secondary.dark = '#818d99'\n\n  const theme = createTheme(cartoThemeOptions)\n\n  return (\n    <Grid container direction='column' className={classes.allMines_2022}>\n        <FormulaWidget\n          id=\"activeMines\"\n          title=\"Active mines\"\n          dataSource=\"allMines_2022Source\"\n          operation={AggregationTypes.COUNT}\n          onError={console.error}\n        />\n        <ThemeProvider theme={theme}>\n          <CategoryWidget\n            id=\"propertyName\"\n            title=\"Property Name\"\n            dataSource=\"allMines_2022Source\"\n            column=\"prop_name\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"primaryCommodity\"\n            title=\"Primary Commodity\"\n            dataSource=\"allMines_2022Source\"\n            column=\"primary_commodity\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"developmentStage\"\n            title=\"Development Stage\"\n            dataSource=\"allMines_2022Source\"\n            column=\"dev_stage\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"miningStage\"\n            title=\"Mining Stage\"\n            dataSource=\"allMines_2022Source\"\n            column=\"stage\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"globalRegion\"\n            title=\"Global Region\"\n            dataSource=\"allMines_2022Source\"\n            column=\"snl_global_region\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"country\"\n            title=\"Country\"\n            dataSource=\"allMines_2022Source\"\n            column=\"country_name\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"stateProvince\"\n            title=\"State/Province\"\n            dataSource=\"allMines_2022Source\"\n            column=\"state_province\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"operatorName\"\n            title=\"Operator Name\"\n            dataSource=\"allMines_2022Source\"\n            column=\"operator_name\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"operatorCountry\"\n            title=\"Operator Country\"\n            dataSource=\"allMines_2022Source\"\n            column=\"operator_country\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"operatorRegion\"\n            title=\"Operator Region\"\n            dataSource=\"allMines_2022Source\"\n            column=\"operator_global_region\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"ownerName\"\n            title=\"Owner Name\"\n            dataSource=\"allMines_2022Source\"\n            column=\"owner_name\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"ownerCountry\"\n            title=\"Owner Country\"\n            dataSource=\"allMines_2022Source\"\n            column=\"owner_country\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n\n          <CategoryWidget\n            id=\"ownerRegion\"\n            title=\"Owner Region\"\n            dataSource=\"allMines_2022Source\"\n            column=\"owner_global_region\"\n            operation={AggregationTypes.COUNT}\n            onError={console.error}\n          />\n        </ThemeProvider>\n    </Grid>\n  );\n}\n"],"sourceRoot":""}