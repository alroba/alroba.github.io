{"version":3,"sources":["components/common/map/useMapHooks.js","components/common/map/InfoWindowWrapper.js","components/common/map/DeckGLComponent.js"],"names":["useStyles","makeStyles","theme","tooltip","typography","caption","position","padding","spacing","borderRadius","shape","backgroundColor","palette","grey","color","transform","display","top","left","width","height","marginLeft","borderLeft","borderRight","borderTop","useMapHooks","classes","dispatch","useDispatch","isHovering","handleViewStateChange","viewState","setViewState","handleSizeChange","handleHover","object","handleCursor","isDragging","handleTooltip","info","html","className","style","background","root","x","y","zIndex","paper","titleContainer","title","fontSize","fontWeight","content","margin","overflow","row","borderBottom","rowField","value","InfoWindowWrapper","infoWindow","coordinates","propsObject","deckInstance","useAppContext","setPosition","useState","coordinates2pixels","current","useEffect","Box","Paper","flexDirection","justifyContent","Typography","variant","fields","map","l","idx","label","pixels","viewport","getViewports","undefined","project","e","DeckGLComponent","layers","popup","setPopup","setSelected","useSelector","state","carto","basemap","BASEMAPS","useTheme","isMobile","useMediaQuery","breakpoints","down","setDeckInstance","onClick","event","picked","ref","controller","onViewStateChange","onResize","onHover","getCursor","getTooltip","pickingRadius","mapLib","maplibregl","reuseMaps","mapStyle","options","styleDiffing","workerClass","maplibreglWorker"],"mappings":"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","file":"static/js/deck-gl.0613c062.chunk.js","sourcesContent":["import { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport { setViewState } from '@carto/react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  tooltip: {\n    '& .content': {\n      ...theme.typography.caption,\n      position: 'relative',\n      padding: theme.spacing(1, 1.5),\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[900],\n      color: 'rgba(255, 255, 255, 0.75)',\n      transform: `translate(-50%, calc(-100% - ${theme.spacing(2.5)}px))`,\n\n      '& .arrow': {\n        display: 'block',\n        position: 'absolute',\n        top: 'calc(100% - 1px)',\n        left: '50%',\n        width: 0,\n        height: 0,\n        marginLeft: theme.spacing(-1),\n        borderLeft: `${theme.spacing(1)}px solid transparent`,\n        borderRight: `${theme.spacing(1)}px solid transparent`,\n        borderTop: `${theme.spacing(1)}px solid ${theme.palette.grey[900]}`,\n      },\n    },\n  },\n}));\n\nexport function useMapHooks() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  let isHovering = false;\n\n  const handleViewStateChange = ({ viewState }) => {\n    dispatch(setViewState(viewState));\n  };\n\n  const handleSizeChange = ({ width, height }) => {\n    dispatch(setViewState({ width, height }));\n  };\n\n  const handleHover = ({ object }) => (isHovering = !!object);\n  const handleCursor = ({ isDragging }) =>\n    isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n\n  const handleTooltip = (info) => {\n    if (info?.object?.html) {\n      return {\n        html: `<div class='content'>${info.object.html}<div class='arrow'></div></div>`,\n        className: classes.tooltip,\n        style: {\n          padding: 0,\n          background: 'none',\n        },\n      };\n    }\n  };\n\n  return {\n    handleViewStateChange,\n    handleSizeChange,\n    handleHover,\n    handleCursor,\n    handleTooltip,\n  };\n}\n","import { Box, makeStyles, Paper, Typography } from '@material-ui/core'\nimport { useEffect, useState } from 'react'\nimport { useAppContext } from '../../../context/AppContext'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    transform: ({ x, y }) =>\n      `translate(${x}px, ${y}px) translate(-50%, calc(-100% - ${theme.spacing(2.5)}px))`,\n    zIndex: 1,\n  },\n  paper: {\n    padding: '6px 12px',\n    borderRadius: '5px'\n  },\n  titleContainer: {\n    padding: theme.spacing(0.5, 1, 0),\n  },\n  title: {\n    fontSize: 15,\n    fontWeight: 600,\n  },\n  content: {\n    margin: theme.spacing(0.5, 0.25, 0),\n    height: 320,\n    overflow: 'auto',\n  },\n  row: {\n    padding: theme.spacing(0.5, 1, 0.5),\n    '&:not(:first-child)': {\n      padding: theme.spacing(0.5, 1),\n    },\n    '&:not(:last-child)': {\n      borderBottom: '1px solid rgba(44, 48, 50, 0.12)',\n    },\n  },\n  rowField: {\n    fontSize: 10,\n    fontWeight: 600,\n    color: 'rgba(44, 48, 50, 0.6)',\n  },\n  value: {\n    fontSize: 13,\n    fontWeight: 600,\n  },\n}))\n\nexport default function InfoWindowWrapper({ infoWindow, viewState }) {\n  const { coordinates, propsObject } = infoWindow\n  const { deckInstance } = useAppContext()\n  const [position, setPosition] = useState(\n    coordinates2pixels(coordinates, deckInstance?.current),\n  )\n  const [x, y] = position || [0, 0]\n  const classes = useStyles({ x, y })\n\n  useEffect(() => {\n    setPosition(coordinates2pixels(coordinates, deckInstance?.current))\n  }, [coordinates, deckInstance, viewState])\n\n  return (\n    <Box className={classes.root}>\n      <Paper className={classes.paper}>\n        <Box className={classes.titleContainer} display='flex' flexDirection='row' justifyContent='space-between'>\n          <Typography className={classes.title} variant='body1'>\n            Mine 2022\n          </Typography>\n        </Box>\n\n        <Box className={classes.content}>\n          {propsObject.fields.map((l, idx) => (\n            <Box key={idx} className={classes.row}>\n              <Typography className={classes.rowField}>{l.label}</Typography>\n              <Typography className={classes.value} variant='body2'>\n                {l.value}\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </Paper>\n    </Box>\n  )\n}\n\nfunction coordinates2pixels(coordinates, deckInstance) {\n  let pixels\n\n  if (deckInstance) {\n    try {\n      const viewports = deckInstance.getViewports(undefined)\n      const viewport = viewports[0]\n\n      if (viewport) {\n        pixels = viewport.project(coordinates)\n      }\n    } catch (e) {\n      // console.warn('viewManager in deckInstance not ready yet')\n    }\n  }\n\n  return pixels\n}\n","import DeckGL from '@deck.gl/react';\nimport { useSelector } from 'react-redux';\nimport { useTheme, useMediaQuery } from '@material-ui/core';\nimport { BASEMAPS } from '@carto/react-basemaps';\nimport { Map } from 'react-map-gl';\nimport { useMapHooks } from './useMapHooks';\nimport { useAppContext } from '../../../context/AppContext'\nimport InfoWindowWrapper from 'components/common/map/InfoWindowWrapper';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport maplibregl from '!maplibre-gl';\nimport maplibreglWorker from 'maplibre-gl/dist/maplibre-gl-csp-worker';\nmaplibregl.workerClass = maplibreglWorker;\n\nexport default function DeckGLComponent({ layers, popup, setPopup, setSelected }) {\n  const viewState = useSelector((state) => state.carto.viewState);\n  const basemap = useSelector((state) => BASEMAPS[state.carto.basemap]);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const {\n    handleCursor,\n    handleHover,\n    handleSizeChange,\n    handleTooltip,\n    handleViewStateChange,\n  } = useMapHooks();\n  const { setDeckInstance } = useAppContext()\n\n  return (\n    <>\n      {popup && (<InfoWindowWrapper infoWindow={popup} viewState={viewState} />)}\n      <DeckGL\n        onClick={ (event) => { \n          if (!event.picked) {\n            setPopup(null);\n            setSelected(null);\n          }; \n        } }\n        ref={ (ref) => setDeckInstance(ref) }\n        viewState={{ ...viewState }}\n        controller={true}\n        layers={layers}\n        onViewStateChange={handleViewStateChange}\n        onResize={handleSizeChange}\n        onHover={handleHover}\n        getCursor={handleCursor}\n        getTooltip={handleTooltip}\n        pickingRadius={isMobile ? 10 : 0}\n      >\n        <Map\n          mapLib={maplibregl}\n          reuseMaps\n          mapStyle={basemap.options.mapStyle}\n          styleDiffing={false}\n        />\n      </DeckGL>\n    </>\n  );\n}\n"],"sourceRoot":""}